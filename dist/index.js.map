{"version":3,"file":"index.js","sources":["../src/index.tsx"],"sourcesContent":["import React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef\n} from 'react';\n\nconst allowedCharactersValues = ['alpha', 'numeric', 'alphanumeric'] as const;\n\nexport type AuthCodeProps = {\n  allowedCharacters?: typeof allowedCharactersValues[number];\n  ariaLabel?: string;\n  autoFocus?: boolean;\n  containerClassName?: string;\n  disabled?: boolean;\n  inputClassName?: string;\n  isPassword?: boolean;\n  length?: number;\n  placeholder?: string;\n  onChange: (res: string) => void;\n  value?: string;\n};\n\ntype InputMode = 'text' | 'numeric';\n\ntype InputType = 'text' | 'tel' | 'password';\n\ntype InputProps = {\n  type: InputType;\n  inputMode: InputMode;\n  pattern: string;\n  min?: string;\n  max?: string;\n};\n\nexport type AuthCodeRef = {\n  focus: () => void;\n  clear: () => void;\n};\n\nconst propsMap: { [key: string]: InputProps } = {\n  alpha: {\n    type: 'text',\n    inputMode: 'text',\n    pattern: '[a-zA-Z]{1}'\n  },\n\n  alphanumeric: {\n    type: 'text',\n    inputMode: 'text',\n    pattern: '[a-zA-Z0-9]{1}'\n  },\n\n  numeric: {\n    type: 'tel',\n    inputMode: 'numeric',\n    pattern: '[0-9]{1}',\n    min: '0',\n    max: '9'\n  }\n};\n\nconst valueValidation = {\n  alpha: (value: string) => /^[a-zA-Z]*$/.test(value),\n  alphanumeric: (value: string) => /^[a-zA-Z0-9]*$/.test(value),\n  numeric: (value: string) => /^[0-9]*$/.test(value)\n};\n\nconst AuthCode = forwardRef<AuthCodeRef, AuthCodeProps>(\n  (\n    {\n      allowedCharacters = 'alphanumeric',\n      ariaLabel,\n      autoFocus = true,\n      containerClassName,\n      disabled,\n      inputClassName,\n      isPassword = false,\n      length = 6,\n      placeholder,\n      onChange,\n      value\n    },\n    ref\n  ) => {\n    const values = value ? value.split('') : [];\n\n    if (isNaN(length) || length < 1) {\n      throw new Error('Length should be a number and greater than 0');\n    }\n\n    if (!allowedCharactersValues.some((value) => value === allowedCharacters)) {\n      throw new Error(\n        'Invalid value for allowedCharacters. Use alpha, numeric, or alphanumeric'\n      );\n    }\n\n    if (value && value.length > length) {\n      throw new Error('Value length should not be greater than length');\n    }\n\n    if (value && !valueValidation[allowedCharacters](value)) {\n      throw new Error(\n        `Value should only contain ${allowedCharacters} characters`\n      );\n    }\n\n    const inputsRef = useRef<Array<HTMLInputElement>>([]);\n    const inputProps = propsMap[allowedCharacters];\n\n    useImperativeHandle(ref, () => ({\n      focus: () => {\n        if (inputsRef.current) {\n          inputsRef.current[0].focus();\n        }\n      },\n      clear: () => {\n        if (inputsRef.current) {\n          for (let i = 0; i < inputsRef.current.length; i++) {\n            inputsRef.current[i].value = '';\n          }\n          inputsRef.current[0].focus();\n        }\n        sendResult();\n      }\n    }));\n\n    useEffect(() => {\n      if (autoFocus) {\n        inputsRef.current[0].focus();\n      }\n    }, []);\n\n    const sendResult = () => {\n      const res = inputsRef.current.map((input) => input.value).join('');\n      onChange && onChange(res);\n    };\n\n    const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const {\n        target: { value, nextElementSibling }\n      } = e;\n      if (value.length > 1) {\n        e.target.value = value.charAt(0);\n        if (nextElementSibling !== null) {\n          (nextElementSibling as HTMLInputElement).focus();\n        }\n      } else {\n        if (value.match(inputProps.pattern)) {\n          if (nextElementSibling !== null) {\n            (nextElementSibling as HTMLInputElement).focus();\n          }\n        } else {\n          e.target.value = '';\n        }\n      }\n      sendResult();\n    };\n\n    const handleOnKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n      const { key } = e;\n      const target = e.target as HTMLInputElement;\n      if (key === 'Backspace') {\n        if (target.value === '') {\n          if (target.previousElementSibling !== null) {\n            const t = target.previousElementSibling as HTMLInputElement;\n            t.value = '';\n            t.focus();\n            e.preventDefault();\n          }\n        } else {\n          target.value = '';\n        }\n        sendResult();\n      }\n\n      if (key === 'Tab' && target.value === '') {\n        e.preventDefault();\n      }\n    };\n\n    const handleOnFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n      e.target.select();\n    };\n\n    const handleOnPaste = (e: React.ClipboardEvent<HTMLInputElement>) => {\n      const pastedValue = e.clipboardData.getData('Text');\n\n      let currentInput = 0;\n\n      for (let i = 0; i < pastedValue.length; i++) {\n        const pastedCharacter = pastedValue.charAt(i);\n        const currentValue = inputsRef.current[currentInput].value;\n        if (pastedCharacter.match(inputProps.pattern)) {\n          if (!currentValue) {\n            inputsRef.current[currentInput].value = pastedCharacter;\n            if (inputsRef.current[currentInput].nextElementSibling !== null) {\n              (inputsRef.current[currentInput]\n                .nextElementSibling as HTMLInputElement).focus();\n              currentInput++;\n            }\n          }\n        }\n      }\n      sendResult();\n\n      e.preventDefault();\n    };\n\n    const inputs = [];\n    for (let i = 0; i < length; i++) {\n      inputs.push(\n        <input\n          key={i}\n          onChange={handleOnChange}\n          onKeyDown={handleOnKeyDown}\n          onFocus={handleOnFocus}\n          onPaste={handleOnPaste}\n          {...inputProps}\n          type={isPassword ? 'password' : inputProps.type}\n          ref={(el: HTMLInputElement) => {\n            inputsRef.current[i] = el;\n          }}\n          maxLength={1}\n          className={inputClassName}\n          autoComplete={i === 0 ? 'one-time-code' : 'off'}\n          aria-label={\n            ariaLabel\n              ? `${ariaLabel}. Character ${i + 1}.`\n              : `Character ${i + 1}.`\n          }\n          disabled={disabled}\n          placeholder={placeholder}\n          defaultValue={values[i] || ''}\n        />\n      );\n    }\n\n    return <div className={containerClassName}>{inputs}</div>;\n  }\n);\n\nexport default AuthCode;\n"],"names":["allowedCharactersValues","propsMap","alpha","type","inputMode","pattern","alphanumeric","numeric","min","max","valueValidation","value","test","AuthCode","forwardRef","ref","allowedCharacters","ariaLabel","autoFocus","containerClassName","disabled","inputClassName","isPassword","length","placeholder","onChange","values","split","isNaN","Error","some","inputsRef","useRef","inputProps","useImperativeHandle","focus","current","clear","i","sendResult","useEffect","res","map","input","join","handleOnChange","e","target","nextElementSibling","charAt","match","handleOnKeyDown","key","previousElementSibling","t","preventDefault","handleOnFocus","select","handleOnPaste","pastedValue","clipboardData","getData","currentInput","pastedCharacter","currentValue","inputs","push","React","onKeyDown","onFocus","onPaste","el","maxLength","className","autoComplete","defaultValue"],"mappings":"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"}